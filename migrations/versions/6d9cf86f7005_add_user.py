"""add user

Revision ID: 6d9cf86f7005
Revises: c37d42057ae4
Create Date: 2024-12-08 20:03:59.756689

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "6d9cf86f7005"
down_revision: Union[str, None] = "c37d42057ae4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("hashed_password", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("avatar", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.add_column("contacts", sa.Column("user_id", sa.Integer(), nullable=True))
    op.alter_column(
        "contacts",
        "birthday",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.Date(),
        nullable=True,
    )
    op.create_unique_constraint("unique_email_user", "contacts", ["email", "user_id"])
    op.create_foreign_key(
        None, "contacts", "users", ["user_id"], ["id"], ondelete="CASCADE"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "contacts", type_="foreignkey")
    op.drop_constraint("unique_email_user", "contacts", type_="unique")
    op.alter_column(
        "contacts",
        "birthday",
        existing_type=sa.Date(),
        type_=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.drop_column("contacts", "user_id")
    op.drop_table("users")
    # ### end Alembic commands ###
